{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/fullstackopen2022/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = () => {};\n\n_c = Button;\n\nconst Header = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 30\n  }, this);\n};\n\n_c2 = Header;\n\nconst Output = _ref2 => {\n  let {\n    text,\n    val\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \" + \\\" \\\" + \", val]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Output;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onCLick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"good\",\n      val: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"neutral\",\n      val: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"bad\",\n      val: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Output\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","Header","text","Output","val","App","good","setGood","neutral","setNeutral","bad","setBad"],"sources":["/home/dev/Documents/fullstackopen2022/part1/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Button = () => {};\n\nconst Header = ({ text }) => <h1>{text}</h1>;\n\nconst Output = ({ text, val }) => (\n  <div>\n    {text} + \" \" + {val}\n  </div>\n);\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  return (\n    <>\n      <Header text=\"give feedback\" />\n      <Button onClick={setGood(good + 1)} />\n      <Button onCLick />\n      <Button />\n      <Header text=\"statistics\" />\n      <Output text=\"good\" val={good} />\n      <Output text=\"neutral\" val={neutral} />\n      <Output text=\"bad\" val={bad} />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM,CAAE,CAAvB;;KAAMA,M;;AAEN,MAAMC,MAAM,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,oBAAc;IAAA,UAAKA;EAAL;IAAA;IAAA;IAAA;EAAA,QAAd;AAAA,CAAf;;MAAMD,M;;AAEN,MAAME,MAAM,GAAG;EAAA,IAAC;IAAED,IAAF;IAAQE;EAAR,CAAD;EAAA,oBACb;IAAA,WACGF,IADH,iBACkBE,GADlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADa;AAAA,CAAf;;MAAMD,M;;AAMN,MAAME,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,IAAI,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,OAAO,EAAEQ,OAAO,CAACD,IAAI,GAAG,CAAR;IAAxB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,OAAO;IAAf;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,MAAD;MAAQ,IAAI,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,MAAD;MAAQ,IAAI,EAAC,MAAb;MAAoB,GAAG,EAAEA;IAAzB;MAAA;MAAA;MAAA;IAAA,QANF,eAOE,QAAC,MAAD;MAAQ,IAAI,EAAC,SAAb;MAAuB,GAAG,EAAEE;IAA5B;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE,QAAC,MAAD;MAAQ,IAAI,EAAC,KAAb;MAAmB,GAAG,EAAEE;IAAxB;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD,CAlBD;;GAAML,G;;MAAAA,G;AAoBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}