{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/fullstackopen2022/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      onClick();\n    },\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Header = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 30\n  }, this);\n};\n\n_c2 = Header;\n\nconst Output = _ref3 => {\n  let {\n    text,\n    val\n  } = _ref3;\n\n  if (text === \"positive\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [text, \" \", val, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \" \", val]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Output;\n\nconst Statistics = _ref4 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref4;\n\n  const getAll = () => good + neutral + bad;\n\n  const getAverage = () => {\n    let average = 0;\n    let count = getAll();\n\n    if (count !== 0) {\n      average += good;\n      average -= bad;\n      average = average / count;\n    }\n\n    return average;\n  };\n\n  const getPositive = () => {\n    let count = getAll();\n\n    if (count !== 0) {\n      return good / count;\n    }\n\n    return 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"good\",\n      val: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"neutral\",\n      val: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"bad\",\n      val: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"all\",\n      val: getAll()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"average\",\n      val: getAverage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Output, {\n      text: \"positive\",\n      val: getPositive()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickOnGood = () => setGood(good + 1);\n\n  const handleClickOnNeutral = () => setNeutral(neutral + 1);\n\n  const handleClickOnBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClickOnGood(),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        handleClickOnNeutral();\n      },\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        handleClickOnBad();\n      },\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Output\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","Button","onClick","text","Header","Output","val","Statistics","good","neutral","bad","getAll","getAverage","average","count","getPositive","App","setGood","setNeutral","setBad","handleClickOnGood","handleClickOnNeutral","handleClickOnBad"],"sources":["/home/dev/Documents/fullstackopen2022/part1/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Button = ({ onClick, text }) => (\n  <button\n    onClick={() => {\n      onClick();\n    }}\n  >\n    {text}\n  </button>\n);\n\nconst Header = ({ text }) => <h1>{text}</h1>;\n\nconst Output = ({ text, val }) => {\n  if (text === \"positive\") {\n    return (\n      <div>\n        {text} {val} %\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {text} {val}\n    </div>\n  );\n};\n\nconst Statistics = ({ good, neutral, bad }) => {\n  const getAll = () => good + neutral + bad;\n\n  const getAverage = () => {\n    let average = 0;\n    let count = getAll();\n\n    if (count !== 0) {\n      average += good;\n      average -= bad;\n      average = average / count;\n    }\n    return average;\n  };\n\n  const getPositive = () => {\n    let count = getAll();\n\n    if (count !== 0) {\n      return good / count;\n    }\n\n    return 0;\n  };\n  return (\n    <>\n      <Header text=\"statistics\" />\n      <Output text=\"good\" val={good} />\n      <Output text=\"neutral\" val={neutral} />\n      <Output text=\"bad\" val={bad} />\n      <Output text=\"all\" val={getAll()} />\n      <Output text=\"average\" val={getAverage()} />\n      <Output text=\"positive\" val={getPositive()} />\n    </>\n  );\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickOnGood = () => setGood(good + 1);\n\n  const handleClickOnNeutral = () => setNeutral(neutral + 1);\n\n  const handleClickOnBad = () => setBad(bad + 1);\n\n  return (\n    <>\n      <Header text=\"give feedback\" />\n      <Button onClick={() => handleClickOnGood()} text=\"good\" />\n      <Button\n        onClick={() => {\n          handleClickOnNeutral();\n        }}\n        text=\"neutral\"\n      />\n      <Button\n        onClick={() => {\n          handleClickOnBad();\n        }}\n        text=\"bad\"\n      />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,MAAM,GAAG;EAAA,IAAC;IAAEC,OAAF;IAAWC;EAAX,CAAD;EAAA,oBACb;IACE,OAAO,EAAE,MAAM;MACbD,OAAO;IACR,CAHH;IAAA,UAKGC;EALH;IAAA;IAAA;IAAA;EAAA,QADa;AAAA,CAAf;;KAAMF,M;;AAUN,MAAMG,MAAM,GAAG;EAAA,IAAC;IAAED;EAAF,CAAD;EAAA,oBAAc;IAAA,UAAKA;EAAL;IAAA;IAAA;IAAA;EAAA,QAAd;AAAA,CAAf;;MAAMC,M;;AAEN,MAAMC,MAAM,GAAG,SAAmB;EAAA,IAAlB;IAAEF,IAAF;IAAQG;EAAR,CAAkB;;EAChC,IAAIH,IAAI,KAAK,UAAb,EAAyB;IACvB,oBACE;MAAA,WACGA,IADH,OACUG,GADV;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,oBACE;IAAA,WACGH,IADH,OACUG,GADV;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAdD;;MAAMD,M;;AAgBN,MAAME,UAAU,GAAG,SAA4B;EAAA,IAA3B;IAAEC,IAAF;IAAQC,OAAR;IAAiBC;EAAjB,CAA2B;;EAC7C,MAAMC,MAAM,GAAG,MAAMH,IAAI,GAAGC,OAAP,GAAiBC,GAAtC;;EAEA,MAAME,UAAU,GAAG,MAAM;IACvB,IAAIC,OAAO,GAAG,CAAd;IACA,IAAIC,KAAK,GAAGH,MAAM,EAAlB;;IAEA,IAAIG,KAAK,KAAK,CAAd,EAAiB;MACfD,OAAO,IAAIL,IAAX;MACAK,OAAO,IAAIH,GAAX;MACAG,OAAO,GAAGA,OAAO,GAAGC,KAApB;IACD;;IACD,OAAOD,OAAP;EACD,CAVD;;EAYA,MAAME,WAAW,GAAG,MAAM;IACxB,IAAID,KAAK,GAAGH,MAAM,EAAlB;;IAEA,IAAIG,KAAK,KAAK,CAAd,EAAiB;MACf,OAAON,IAAI,GAAGM,KAAd;IACD;;IAED,OAAO,CAAP;EACD,CARD;;EASA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,IAAI,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,IAAI,EAAC,MAAb;MAAoB,GAAG,EAAEN;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,IAAI,EAAC,SAAb;MAAuB,GAAG,EAAEC;IAA5B;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,IAAI,EAAC,KAAb;MAAmB,GAAG,EAAEC;IAAxB;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,MAAD;MAAQ,IAAI,EAAC,KAAb;MAAmB,GAAG,EAAEC,MAAM;IAA9B;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,MAAD;MAAQ,IAAI,EAAC,SAAb;MAAuB,GAAG,EAAEC,UAAU;IAAtC;MAAA;MAAA;MAAA;IAAA,QANF,eAOE,QAAC,MAAD;MAAQ,IAAI,EAAC,UAAb;MAAwB,GAAG,EAAEG,WAAW;IAAxC;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAWD,CAnCD;;MAAMR,U;;AAqCN,MAAMS,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACR,IAAD,EAAOS,OAAP,IAAkBjB,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACS,OAAD,EAAUS,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACU,GAAD,EAAMS,MAAN,IAAgBnB,QAAQ,CAAC,CAAD,CAA9B;;EAEA,MAAMoB,iBAAiB,GAAG,MAAMH,OAAO,CAACT,IAAI,GAAG,CAAR,CAAvC;;EAEA,MAAMa,oBAAoB,GAAG,MAAMH,UAAU,CAACT,OAAO,GAAG,CAAX,CAA7C;;EAEA,MAAMa,gBAAgB,GAAG,MAAMH,MAAM,CAACT,GAAG,GAAG,CAAP,CAArC;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,IAAI,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAMU,iBAAiB,EAAxC;MAA4C,IAAI,EAAC;IAAjD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MACE,OAAO,EAAE,MAAM;QACbC,oBAAoB;MACrB,CAHH;MAIE,IAAI,EAAC;IAJP;MAAA;MAAA;MAAA;IAAA,QAHF,eASE,QAAC,MAAD;MACE,OAAO,EAAE,MAAM;QACbC,gBAAgB;MACjB,CAHH;MAIE,IAAI,EAAC;IAJP;MAAA;MAAA;MAAA;IAAA,QATF;EAAA,gBADF;AAkBD,CA9BD;;GAAMN,G;;MAAAA,G;AAgCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}