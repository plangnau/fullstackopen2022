{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/fullstackopen2022/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      onClick();\n    },\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Header = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 30\n  }, this);\n};\n\n_c2 = Header;\n\nconst StatisticLine = _ref3 => {\n  let {\n    text,\n    value\n  } = _ref3;\n\n  if (text === \"positive\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [text, \" \", value, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \" \", val]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = StatisticLine;\n\nconst Statistics = _ref4 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref4;\n\n  const getAll = () => good + neutral + bad;\n\n  const getAverage = () => {\n    let average = 0;\n    let count = getAll();\n\n    if (count !== 0) {\n      average += good;\n      average -= bad;\n      average = average / count;\n    }\n\n    return average;\n  };\n\n  const getPositive = () => {\n    let count = getAll();\n\n    if (count !== 0) {\n      return good / count;\n    }\n\n    return 0;\n  };\n\n  const getContent = () => {\n    if (good !== 0 || neutral !== 0 || bad !== 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"good\",\n          value: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"neutral\",\n          value: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"bad\",\n          value: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"all\",\n          value: getAll()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"average\",\n          value: getAverage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"positive\",\n          value: getPositive()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), getContent()]\n  }, void 0, true);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickOnGood = () => setGood(good + 1);\n\n  const handleClickOnNeutral = () => setNeutral(neutral + 1);\n\n  const handleClickOnBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClickOnGood(),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        handleClickOnNeutral();\n      },\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        handleClickOnBad();\n      },\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"StatisticLine\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","Button","onClick","text","Header","StatisticLine","value","val","Statistics","good","neutral","bad","getAll","getAverage","average","count","getPositive","getContent","App","setGood","setNeutral","setBad","handleClickOnGood","handleClickOnNeutral","handleClickOnBad"],"sources":["/home/dev/Documents/fullstackopen2022/part1/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Button = ({ onClick, text }) => (\n  <button\n    onClick={() => {\n      onClick();\n    }}\n  >\n    {text}\n  </button>\n);\n\nconst Header = ({ text }) => <h1>{text}</h1>;\n\nconst StatisticLine = ({ text, value }) => {\n  if (text === \"positive\") {\n    return (\n      <div>\n        {text} {value} %\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {text} {val}\n    </div>\n  );\n};\n\nconst Statistics = ({ good, neutral, bad }) => {\n  const getAll = () => good + neutral + bad;\n\n  const getAverage = () => {\n    let average = 0;\n    let count = getAll();\n\n    if (count !== 0) {\n      average += good;\n      average -= bad;\n      average = average / count;\n    }\n    return average;\n  };\n\n  const getPositive = () => {\n    let count = getAll();\n\n    if (count !== 0) {\n      return good / count;\n    }\n\n    return 0;\n  };\n\n  const getContent = () => {\n    if (good !== 0 || neutral !== 0 || bad !== 0) {\n      return (\n        <>\n          <StatisticLine text=\"good\" value={good} />\n          <StatisticLine text=\"neutral\" value={neutral} />\n          <StatisticLine text=\"bad\" value={bad} />\n          <StatisticLine text=\"all\" value={getAll()} />\n          <StatisticLine text=\"average\" value={getAverage()} />\n          <StatisticLine text=\"positive\" value={getPositive()} />\n        </>\n      );\n    }\n\n    return <div>No feedback given</div>;\n  };\n\n  return (\n    <>\n      <Header text=\"statistics\" />\n      {getContent()}\n    </>\n  );\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickOnGood = () => setGood(good + 1);\n\n  const handleClickOnNeutral = () => setNeutral(neutral + 1);\n\n  const handleClickOnBad = () => setBad(bad + 1);\n\n  return (\n    <>\n      <Header text=\"give feedback\" />\n      <Button onClick={() => handleClickOnGood()} text=\"good\" />\n      <Button\n        onClick={() => {\n          handleClickOnNeutral();\n        }}\n        text=\"neutral\"\n      />\n      <Button\n        onClick={() => {\n          handleClickOnBad();\n        }}\n        text=\"bad\"\n      />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}